Parameters:
  snsScanResultTopicArn:
    Type: String
    Description: FSS Results SNS Topic ARN.
  LambdaZipBucket:
    Type: String
    Description: S3 bucket for lambda zip. If your have it under s3://bucket/path/to/zip.zip, enter 'bucket' here.
  LambdaZipKey:
    Type: String
    Description: S3 key for lambda zip. If your have it under s3://bucket/path/to/zip.zip, enter 'path/to/zip.zip' here.
Resources:
  SentToSecurityHubLambdaFunctionServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  SentToSecurityHubLambdaFunctionServiceRoleDefaultPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action: securityhub:BatchImportFindings
            Effect: Allow
            Resource:
              !Sub arn:${AWS::Partition}:securityhub:${AWS::Region}:${AWS::AccountId}:product/${AWS::AccountId}/default
          - Action: logs:CreateLogGroup
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*
          - Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
            Effect: Allow
            Resource: !Sub arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*
        Version: "2012-10-17"
      PolicyName: SentToSecurityHubLambdaFunctionServiceRoleDefaultPolicy
      Roles:
        - Ref: SentToSecurityHubLambdaFunctionServiceRole
  SentToSecurityHubLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: LambdaZipBucket
        S3Key:
          Ref: LambdaZipKey
      Handler: index.handler
      Role: !GetAtt SentToSecurityHubLambdaFunctionServiceRole.Arn
      Runtime: nodejs20.x
      Environment:
        Variables:
          SECURITY_HUB_ARN: !Sub arn:${AWS::Partition}:securityhub:${AWS::Region}:${AWS::AccountId}:product/${AWS::AccountId}/default
          ACCOUNT_ID:
            Ref: AWS::AccountId
    DependsOn:
      - SentToSecurityHubLambdaFunctionServiceRoleDefaultPolicy
  SentToSecurityHubLambdaFunctionAllowInvokeFssToSecurityhubStacksnsScanResultTopic:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt SentToSecurityHubLambdaFunction.Arn
      Principal: sns.amazonaws.com
      SourceArn:
        Ref: snsScanResultTopicArn
  SentToSecurityHubLambdaFunctionsnsScanResultTopic:
    Type: AWS::SNS::Subscription
    Properties:
      Protocol: lambda
      TopicArn:
        Ref: snsScanResultTopicArn
      Endpoint: !GetAtt SentToSecurityHubLambdaFunction.Arn
      Region:
        Fn::Select:
          - 3
          - Fn::Split:
              - ":"
              - Ref: snsScanResultTopicArn
